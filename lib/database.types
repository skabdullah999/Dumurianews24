export type Json = string | number | boolean | null | { [key: string]: Json | undefined } | Json[];

export interface Database {
  public: {
    Tables: {
      categories: {
        Row: {
          id: string;
          name: string;
          created_at: string;
        };
        Insert: {
          id?: string;
          name: string;
          created_at?: string;
        };
        Update: {
          id?: string;
          name?: string;
          created_at?: string;
        };
        Relationships: [];
      };
      news: {
        Row: {
          id: string;
          title: string;
          summary: string;
          content: string;
          image: string;
          category_id: string;
          date: string;
          author: string;
          is_breaking: boolean;
          created_at: string;
        };
        Insert: {
          id?: string;
          title: string;
          summary: string;
          content: string;
          image: string;
          category_id: string;
          date?: string;
          author: string;
          is_breaking?: boolean;
          created_at?: string;
        };
        Update: {
          id?: string;
          title?: string;
          summary?: string;
          content?: string;
          image?: string;
          category_id?: string;
          date?: string;
          author?: string;
          is_breaking?: boolean;
          created_at?: string;
        };
        Relationships: [
          {
            foreignKeyName: "news_category_id_fkey";
            columns: ["category_id"];
            referencedRelation: "categories";
            referencedColumns: ["id"];
          },
        ];
      };
      comments: {
        Row: {
          id: string;
          news_id: string;
          name: string;
          text: string;
          date: string;
          is_approved: boolean;
          created_at: string;
        };
        Insert: {
          id?: string;
          news_id: string;
          name: string;
          text: string;
          date?: string;
          is_approved?: boolean;
          created_at?: string;
        };
        Update: {
          id?: string;
          news_id?: string;
          name?: string;
          text?: string;
          date?: string;
          is_approved?: boolean;
          created_at?: string;
        };
        Relationships: [
          {
            foreignKeyName: "comments_news_id_fkey";
            columns: ["news_id"];
            referencedRelation: "news";
            referencedColumns: ["id"];
          },
        ];
      };
    };
    Views: {
      [_ in never]: never;
    };
    Functions: {
      [_ in never]: never;
    };
    Enums: {
      [_ in never]: never;
    };
    CompositeTypes: {
      [_ in never]: never;
    };
  };
}
